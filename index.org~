#+TITLE:     辛对红的Wiki
#+AUTHOR:    XinDuihong
#+EMAIL:     (xinduihong@163.com)
#+DESCRIPTION: 
#+KEYWORDS:
#+LANGUAGE:  en,ch
#+OPTIONS:   H:4 num:t toc:2
#+SETUPFILE: theme.setup

# +BEGIN_CENTER
Talk is cheap,show me the code. --用图表和代码说话的程序媛
Everything should be made as simple as possible,but not any simpler -- Albert Einstein
# +END_CENTER
-----

* Python
  
 [[~/image/1.jpg]]
* Wiki

** MarkDown
*** Org-mode

* Shell
* Jenkins
**** Jekins是什么

Jenkins是一个基于社区开发的开源可扩展持续集成服务（CI）,源于Hudson，使用java开发。它可以持续编译，运行你的代码；运行UT或集成测试；将运行结果发送至邮件，或展示成报告。同时可以监控一些定时执行的任务，无须人工干预，保证项目随时可以交付给用户。官网链接：
[[https://jenkins.io/index.html]]


**** Jekins的特性

***** Jenkins容易安装和配置，而且提供了直观灵活的基于web的用户界面配置管理方案
***** 具有强大的插件框架，目前已经拥有超过600中插件可供使用
***** 支持多种构建语言，包括Python等
***** 集成了RSS/Email通知机制
***** 支持分布式构建
***** Jenkins默认的权限管理体系不支持用户组或角色的配置，可以用匿名用户做任何事情。可以使用第三方插件来支持角色的配置


**** Jekins的使用

***** *Jekins配置*

以下是我的实际经验总结记录，操作期间参考了一些网络文档。

****** *持续集成系统的结构组成*

Maven:自动构建过程，包括自动编译、分发、部署和测试；
GitLab:代码存储库，即需要版本控制软件来保障代码的可维护性，同时作为构建过程的素材库;
Jekins: 安装JDK1.8和tomcat，下载jekins文件，放到到tomcat下的wabapps目录下，启动tomcat;http://localhost:8080 打开Jekins即可打开Jekins看到一个慈祥的老头。


****** *配置Jekins*


安装所需插件，jenkins已经安装了Ant、Maven、Subversion、CVS、Mailer等常用插件，再安装如findbugs、checkstyle静态分析插件、Junit单元测试插件；

安装方法: 在jenkins->"系统管理"->"插件管理"里面,可以查看需要更新的,已安装的和可选的插件。在线安装插件，在“可选插件”中选中要安装的插件安装。安装的时候需要在高级里面设置代理,确保jenkins可以上互联网,才能够进行在线安装和更新；安装后的插件位于jenkins的plugins中，后缀为jpi；

*示例:FindBugs插件的安装*

Step1:Jenkins安装findbugs插件
Step2:pom.xml[1]中配置findbugs插件;

#+begin_src xml -n
<plugin> 
   <groupId>org.codehaus.mojo</groupId> 
    <artifactId>findbugs-maven-plugin</artifactId> 
    <version>2.5.1</version> 
    <configuration> 
    <threshold>High</threshold>
    <effort>Default</effort>
     <findbugsXmlOutput>true</findbugsXmlOutput>
     <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
     <xmlOutput>true</xmlOutput>
     <formats><format>html</format></formats>
     </configuration> 
 </plugin>

#+end_src

Step3:配置后，在Jenkins的Goals中设置findbugs:findbugs;


*示例:Junit插件的安装*

Step1:在pom.xml中配置junit

#+begin_src xml -n

<dependency>
<groupId>junit</groupId>
<artifactId>junit</artifactId>
<version>4.8</version>
<scope>test</scope>
</dependency>

#+end_src

Step2:配置测试插件

#+begin_src xml -n

<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-surefire-plugin</artifactId>
<version>2.7</version>
<configuration>  
<includes>  
<include>**/*Test.java</include>  
</includes>  
</configuration>    
</plugin>

+end_src

Step3:Jenkins安装插件JavaTest Report Plugin，以便在jenkins中查看test报告。

* Selenium
*** UI自动化架构
*** Selenium 1 基础函数
*** Selenium 2 基础函数
* ELK Log System
* RobotFrameWork
* SpotLight
** Spotlight on Unix
** Spotlight for windows
** Spotlight for MySQL
* Jmeter
* TestNG
* Postman
* Kali Linux
* Java
* Shell
* Git
* Javascript
* SQL
* 算法
* 数据结构
* Github探索 

-----


　
** 网站更新记录

| *序号* |    *时间* | *类别*   | *更新*                                         | *备注*                                                                                                         | *自言自语*                                                     |
|--------+-----------+----------+------------------------------------------------+----------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------|
|      1 | 2016.3.29 | Wiki上线 | 完成基本类别架构和风格设计编码，Github文件更新 | 使用Emacs Org-mode编写，使用org-html-themes，托管在Github                                                      | 创造一件东西就跟生孩子一样痛苦而喜悦，虽然我并没生过           |
|      2 | 2016.3.30 | 内容创建 | 更新Jenkins的操作内容                          | Jenkins+maven+GitLab的持续集成                                                                                 | 这才刚开始写字，就时刻有一种此处省略一万字的冲动,喵~           |
|      3 |  2016.4.1 | 打卡     | Jenkins构建失败                                | gradle是什么鬼                                                                                                 | 抓狂中                                                         |
|      4 |  2016.4.4 | 打卡     | 删除部分近期不可能更新的类别                   | 开始学习微信公众号的开发和运营                                                                                 | 知道怎么添加图片了，被网络教程误导，直接添加路径，相对绝对都行 |
|      5 |  2016.4.7 | 打卡     | 无                                             |总结了testng和selenium webdriver的使用                                                                          | 搭建起自动化流程                             |
|      6 | 2016.4.13 | 打卡     | 没时间更新                                     | 编译后图片又无法显示了                                                                                         | 衰                                                             |
|      7 | 2016.5.28 | 更新     | 增加评论插件，调整结构，更换夏天主题           | 觉得难看来咬我啊，删除了部分短期内不可能更新的章节，可以在评论区给意见，某个说我画的丹妮莉丝像马云的同学可以静默了   | 我没有你们想象的那么懒哦                                                   |

* Footnotes

[1] pom.xml:Project Object Model，项目对象模型。通过xml格式保存的pom.xml文件。作用类似ant的build.xml文件，功能更强大。该文件用于管理：源代码、配置文件、开发者的信息和角色、问题追踪系统、组织信息、项目授权、项目的url、项目的依赖关系等等。一个完整的pom.xml文件，放置在项目的根目录下。
